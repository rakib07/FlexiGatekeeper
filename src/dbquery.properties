db.query.create-user = INSERT INTO `users` (`user_id`, `subscriber_user_id`, `reference_username`, `created_on`, `modified_on`) VALUES (:user_id, :subscriber_user_id, :reference_username, :created_on, :modified_on);
db.query.create-subscriber = INSERT INTO `subscribers` (`user_id`, `registration_date`, `expired_date`, `max_members`, `ip_address`) VALUES (:user_id, :registration_date, :expired_date, :max_members, :ip_address);
db.query.update-subscriber-info = UPDATE subscribers set `registration_date`= :registration_date,`expired_date`= :expired_date,`max_members`= :max_members,`ip_address`= :ip_address where user_id = :user_id;
db.query.add-subscriber-service = INSERT INTO `subscribers_services` (`subscriber_user_id`, `service_id`, `api_key`, `registration_date`, `expired_date`) VALUES (:subscriber_user_id, :service_id, :api_key, :registration_date, :expired_date);
db.query.add-callback-function = INSERT INTO `callback_functions` (`api_key`, `callback_function`) VALUES (:api_key, :callback_function);
db.query.get-subscriber-info = SELECT users.reference_username, subscribers.* from subscribers join users on subscribers.user_id = users.subscriber_user_id where reference_username = :reference_username;
db.query.get-subscriber-info-by-user_id = SELECT subscribers.* from subscribers where user_id = :user_id;
db.query.get-subscriber-total-members = SELECT count(users.user_id) as current_members from subscribers join users on subscribers.user_id = users.subscriber_user_id where subscriber_user_id = :subscriber_user_id;
db.query.get-user-subscriber-service-info = SELECT users.user_id as member_user_id, subscribers.expired_date as subscription_expired_date, subscribers_services.expired_date as api_expired_date from users join subscribers on users.subscriber_user_id = subscribers.user_id join subscribers_services on subscribers_services.subscriber_user_id = subscribers.user_id where reference_username = :reference_username and ip_address = :ip_address and api_key = :api_key;
db.query.get-all-subscribers = SELECT subscribers.* from subscribers;

"db.query.get_all_subscriber_payments" = ;

db.query.get-current-balance = SELECT sum(balance_in)-sum(balance_out) as current_balance from transactions where api_key = :api_key; 
db.query.get-all-transactions = SELECT transactions.* from transactions;
db.query.create-transaction = INSERT INTO `transactions` (`transaction_id`, `api_key`, `balance_in`, `balance_out`, `status_id`, `type_id`, `cell_no`, `description`, `created_on`, `modified_on`) VALUES (:transaction_id, :api_key, :balance_in, :balance_out, :status_id, :type_id, :cell_no, :description, :created_on, :modified_on);
db.query.update-transaction = UPDATE transactions set `api_key`= :api_key,`balance_in`= :balance_in,`balance_out`= :balance_out,`status_id`= :status_id,`type_id`= :type_id,`cell_no`= :cell_no,`description`= :description,`created_on`= :created_on,`modified_on`= :modified_on  where transaction_id = :transaction_id;
db.query.get-transaction-info = SELECT  transactions.* from transactions where transaction_id = :transaction_id;
db.query.delete-transaction-info = DELETE from transactions where `transaction_id` = :transaction_id;

db.query.add-service = INSERT INTO `services` (`id`, `title`) VALUES (:id, :title);
db.query.get-all-services = SELECT services.id as service_id, services.* from services;
db.query.get-service-info = SELECT services.id as service_id, services.* from services where id = :id;
db.query.update-service-info = UPDATE services set `title`= :title where id = :id;
